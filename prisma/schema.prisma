// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["selectRelationCount"]
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
    @@index([createdById])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

enum UserRole {
    ADMIN
    USER
    LOGIN
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    // role  UserRole @default(LOGIN)
    role UserRole @default(LOGIN)

    accounts        Account[]
    sessions        Session[]
    posts           Post[]
    personal        personal[]
    sawblades       sawblades[]
    sawbladeComment sawbladeComment[]
    oml             oml[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model personal {
    id        String    @id @default(cuid())
    img       String
    msg       String
    title     String
    secret    String
    user      User      @relation(fields: [userId], references: [id])
    userId    String
    userBlade sawblades @relation(fields: [id], references: [id])

    @@index([userId])
    @@index([id])
}

model sawblades {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    type            String
    serial          String
    createdBy       User              @relation(fields: [createdById], references: [id])
    createdById     String
    userId          String
    sawbladeComment sawbladeComment[]
    oml             oml[]
    personal        personal[]

    @@index([userId])
    @@index([createdById])
}

model sawbladeComment {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    comment   String
    user      User      @relation(fields: [userId], references: [id])
    userId    String
    blades    sawblades @relation(fields: [id], references: [id])

    @@index([userId])
    @@index([id])
}

model oml {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    firma     String
    user      User      @relation(fields: [userId], references: [id])
    userId    String
    bladeOml  sawblades @relation(fields: [id], references: [id])

    @@index([userId])
    @@index([id])
}
